"""
PROBLEM

There are several ways to write the number 1/2 as a sum of inverse squares using distinct integers.

For instance, the numbers {2,3,4,5,7,12,15,20,28,35} can be used.

In fact, only using integers between 2 and 45 inclusive, there are exactly three ways to do it,
the remaining two being: {2,3,4,6,7,9,10,20,28,35,36,45} and
 {2,3,4,6,7,9,12,15,28,30,35,36,45}.

How many ways are there to write the number 1/2 as a sum of inverse squares using distinct integers between 2 and 80 inclusive?

ANSWER:
Solve time ~s seconds
"""


from util.utils import timeit
import unittest
from fractions import Fraction

x1 = {2,3,4,5,7,12,15,20,28,35}
x2 = {2,3,4,6,7,9,10,20,28,35,36,45}
x3 = {2,3,4,6,7,9,12,15,28,30,35,36,45}

CANDIDATES = [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 20, 21, 24, 28,
              30, 35, 36, 39, 40, 42, 45, 52, 56, 60, 63, 70, 72]


def sum_of_recip_sq_frac(s):
    return sum(Fraction(1, i**2) for i in s)


def sum_of_recip_sq(s):
    return sum(pow(i, -2) for i in s)


target_sum = Fraction(1, 2)


def subset_sum(numbers, target, partial=None):
    if partial is None:
        partial = []
    s = sum_of_recip_sq_frac(partial)

    # check if the partial sum is equals to target
    if s == target:
        print(f'sum({partial})={target}')
    if s >= target:
        return  # if we reach the number why bother to continue

    for i in range(len(numbers)):
        n = numbers[i]
        remaining = numbers[i + 1:]
        subset_sum(remaining, target, partial + [n])  # todo replace partial list with partial sum

subset_sum(CANDIDATES, Fraction(1,2))


def is_square(n: int):
    sq = n ** 0.5
    if abs(sq - int(sq)) < 1e-10:
        return True



ls_x1 = list(x1)
up_to = 81
for i, n in enumerate(ls_x1):
    for m in ls_x1[i+1:]:
        first_total = Fraction(1, n**2) + Fraction(1, m**2)
        for x in range(2, up_to):
            if x in x1:
                continue
            for y in range(x+1, up_to):
                if y in x1:
                    continue
                second_total = Fraction(1, x**2) + Fraction(1, y**2)
                check = first_total - second_total
                if check.numerator == 1:
                    if is_square(check.denominator):
                        z = int(check.denominator**0.5)
                        if z in x1:
                            continue
                        if z <= y:
                            continue
                        # print(f'n={n}, m={m}, x={x}, y={y}, z={z}')
                        print(f'1/{n}^2 + 1/{m}^2 = 1/{x}^2 + 1/{y}^2 + 1/{z}^2')



class Problem152:
    def __init__(self):
        pass

    @timeit
    def solve(self):
        raise NotImplementedError('Please implement this method!')


class Solution152(unittest.TestCase):
    def setUp(self):
        self.problem = Problem152()

    def test_solution(self):
        # Fill this in once you've got a working solution!
        self.assertEqual(1, self.problem.solve())


if __name__ == '__main__':
    unittest.main()

# https://stackoverflow.com/questions/4632322/finding-all-possible-combinations-of-numbers-to-reach-a-given-sum


def subset_sum(numbers, target, partial=None, partial_sum=Fraction(0, 1)):
    if partial is None:
        partial = []
    if partial_sum == target:
        yield partial
    if partial_sum >= target:
        return
    for i, n in enumerate(numbers):
        remaining = numbers[i + 1:]
        yield from subset_sum(remaining, target, partial + [n], partial_sum + Fraction(1, n**2))


# sum([2, 3, 4, 5, 6, 21, 24, 30, 35, 36, 40, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 7, 9, 28, 35, 36, 45, 60])=1/2
# sum([2, 3, 4, 5, 7, 10, 20, 28, 30, 35, 60])=1/2
# sum([2, 3, 4, 5, 7, 10, 24, 28, 36, 40, 42, 45, 56, 72])=1/2
# sum([2, 3, 4, 5, 7, 12, 13, 28, 35, 39, 52])=1/2
# sum([2, 3, 4, 5, 7, 12, 15, 18, 36, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 7, 12, 15, 20, 28, 35])=1/2
# sum([2, 3, 4, 5, 7, 12, 15, 21, 28, 42, 60, 70])=1/2
# sum([2, 3, 4, 5, 7, 12, 18, 21, 28, 35, 36, 42, 63])=1/2
# sum([2, 3, 4, 5, 7, 12, 18, 21, 28, 35, 42, 45, 60, 63])=1/2
# sum([2, 3, 4, 5, 7, 13, 15, 18, 36, 39, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 7, 13, 15, 20, 28, 35, 39, 52])=1/2
# sum([2, 3, 4, 5, 7, 13, 15, 21, 28, 39, 42, 52, 60, 70])=1/2
# sum([2, 3, 4, 5, 7, 13, 18, 21, 28, 35, 36, 39, 42, 52, 63])=1/2
# sum([2, 3, 4, 5, 7, 13, 18, 21, 28, 35, 39, 42, 45, 52, 60, 63])=1/2
# sum([2, 3, 4, 5, 7, 14, 15, 18, 28, 36, 42, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 7, 14, 15, 24, 28, 35, 36, 40, 45, 56, 70, 72])=1/2
# sum([2, 3, 4, 5, 7, 15, 18, 20, 21, 28, 35, 36, 42, 63])=1/2
# sum([2, 3, 4, 5, 7, 15, 18, 20, 21, 28, 35, 42, 45, 60, 63])=1/2
# sum([2, 3, 4, 5, 8, 9, 14, 24, 35, 56, 63, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 14, 30, 35, 40, 56, 63, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 18, 20, 24, 40, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 18, 21, 24, 35, 56, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 18, 21, 30, 35, 40, 56, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 20, 21, 24, 40, 42, 60, 63, 72])=1/2
# sum([2, 3, 4, 5, 8, 9, 21, 24, 30, 35, 36, 40, 45, 56, 60])=1/2
# sum([2, 3, 4, 5, 8, 10, 12, 24, 36, 40, 45, 72])=1/2
# sum([2, 3, 4, 5, 8, 10, 13, 24, 36, 39, 40, 45, 52, 72])=1/2
# sum([2, 3, 4, 5, 8, 10, 14, 20, 24, 40, 56, 60, 70])=1/2
# sum([2, 3, 4, 5, 8, 10, 14, 24, 28, 36, 40, 42, 45, 72])=1/2
# sum([2, 3, 4, 5, 8, 10, 15, 20, 24, 36, 40, 45, 72])=1/2
# sum([2, 3, 4, 5, 8, 10, 18, 24, 28, 30, 35, 36, 40, 42, 56, 63, 70])=1/2
# sum([2, 3, 4, 5, 8, 10, 18, 24, 28, 30, 35, 40, 42, 45, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 8, 12, 13, 21, 24, 30, 35, 39, 40, 52, 56])=1/2
# sum([2, 3, 4, 5, 8, 12, 13, 21, 24, 35, 36, 39, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 12, 13, 21, 30, 35, 36, 39, 40, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 15, 24, 30, 40, 56, 60, 70])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 18, 24, 30, 35, 36, 40, 56, 63])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 18, 24, 30, 35, 40, 45, 56, 60, 63])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 21, 24, 28, 30, 35, 40, 42, 56])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 21, 24, 28, 35, 36, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 12, 14, 21, 28, 30, 35, 36, 40, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 12, 15, 18, 24, 28, 35, 40, 42, 45, 56, 63, 70])=1/2
# sum([2, 3, 4, 5, 8, 12, 15, 20, 21, 24, 30, 35, 40, 56])=1/2
# sum([2, 3, 4, 5, 8, 12, 15, 20, 21, 24, 35, 36, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 12, 15, 20, 21, 30, 35, 36, 40, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 15, 24, 30, 39, 40, 52, 56, 60, 70])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 18, 24, 30, 35, 36, 39, 40, 52, 56, 63])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 18, 24, 30, 35, 39, 40, 45, 52, 56, 60, 63])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 21, 24, 28, 30, 35, 39, 40, 42, 52, 56])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 21, 24, 28, 35, 36, 39, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 13, 14, 21, 28, 30, 35, 36, 39, 40, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 13, 15, 18, 24, 28, 35, 39, 40, 42, 45, 52, 56, 63, 70])=1/2
# sum([2, 3, 4, 5, 8, 13, 15, 20, 21, 24, 30, 35, 39, 40, 52, 56])=1/2
# sum([2, 3, 4, 5, 8, 13, 15, 20, 21, 24, 35, 36, 39, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 13, 15, 20, 21, 30, 35, 36, 39, 40, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 18, 20, 24, 30, 35, 36, 40, 56, 63])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 18, 20, 24, 30, 35, 40, 45, 56, 60, 63])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 18, 21, 24, 30, 36, 40, 42, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 20, 21, 24, 28, 30, 35, 40, 42, 56])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 20, 21, 24, 28, 35, 36, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 8, 14, 15, 20, 21, 28, 30, 35, 36, 40, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 5, 9, 10, 12, 15, 30, 36, 45, 60])=1/2
# sum([2, 3, 4, 5, 9, 10, 12, 24, 28, 30, 35, 40, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 10, 13, 15, 30, 36, 39, 45, 52, 60])=1/2
# sum([2, 3, 4, 5, 9, 10, 13, 24, 28, 30, 35, 39, 40, 42, 52, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 10, 14, 15, 28, 30, 36, 42, 45, 60])=1/2
# sum([2, 3, 4, 5, 9, 10, 14, 18, 20, 24, 40, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 10, 14, 20, 21, 24, 40, 42, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 10, 15, 20, 24, 28, 30, 35, 40, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 13, 14, 24, 30, 35, 39, 40, 52, 56, 63, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 13, 18, 21, 24, 30, 35, 39, 40, 52, 56, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 14, 15, 18, 24, 30, 40, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 14, 15, 20, 24, 30, 35, 40, 56, 63, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 14, 15, 21, 24, 30, 40, 42, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 14, 18, 21, 24, 28, 30, 35, 40, 42, 56, 72])=1/2
# sum([2, 3, 4, 5, 9, 12, 15, 18, 20, 21, 24, 30, 35, 40, 56, 72])=1/2
# sum([2, 3, 4, 5, 9, 13, 14, 15, 18, 24, 30, 39, 40, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 13, 14, 15, 20, 24, 30, 35, 39, 40, 52, 56, 63, 72])=1/2
# sum([2, 3, 4, 5, 9, 13, 14, 15, 21, 24, 30, 39, 40, 42, 52, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 5, 9, 13, 14, 18, 21, 24, 28, 30, 35, 39, 40, 42, 52, 56, 72])=1/2
# sum([2, 3, 4, 5, 9, 13, 15, 18, 20, 21, 24, 30, 35, 39, 40, 52, 56, 72])=1/2
# sum([2, 3, 4, 5, 9, 14, 15, 18, 20, 21, 24, 28, 30, 35, 40, 42, 56, 72])=1/2
# sum([2, 3, 4, 5, 10, 12, 13, 14, 15, 28, 30, 39, 42, 52])=1/2
# sum([2, 3, 4, 5, 10, 12, 13, 14, 18, 21, 35, 36, 39, 52, 63, 70])=1/2
# sum([2, 3, 4, 5, 10, 12, 13, 14, 18, 21, 35, 39, 45, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 10, 12, 13, 15, 18, 21, 30, 36, 39, 42, 52, 63])=1/2
# sum([2, 3, 4, 5, 10, 12, 13, 15, 18, 21, 30, 39, 42, 45, 52, 60, 63])=1/2
# sum([2, 3, 4, 5, 10, 12, 14, 15, 18, 20, 21, 35, 36, 63, 70])=1/2
# sum([2, 3, 4, 5, 10, 12, 14, 15, 18, 20, 21, 35, 45, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 10, 13, 14, 15, 18, 20, 21, 35, 36, 39, 52, 63, 70])=1/2
# sum([2, 3, 4, 5, 10, 13, 14, 15, 18, 20, 21, 35, 39, 45, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 5, 12, 13, 14, 15, 20, 21, 24, 28, 30, 35, 36, 39, 40, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 12, 24, 28, 30, 40, 42, 56])=1/2
# sum([2, 3, 4, 6, 7, 8, 12, 24, 28, 36, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 12, 28, 30, 36, 40, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 13, 24, 28, 30, 39, 40, 42, 52, 56])=1/2
# sum([2, 3, 4, 6, 7, 8, 13, 24, 28, 36, 39, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 13, 28, 30, 36, 39, 40, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 14, 20, 24, 28, 35, 40, 56, 70])=1/2
# sum([2, 3, 4, 6, 7, 8, 14, 20, 28, 35, 36, 40, 45, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 14, 21, 24, 30, 36, 40, 45, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 15, 20, 24, 28, 30, 40, 42, 56])=1/2
# sum([2, 3, 4, 6, 7, 8, 15, 20, 24, 28, 36, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 15, 20, 28, 30, 36, 40, 42, 45, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 15, 21, 24, 28, 36, 40, 42, 45, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 8, 18, 20, 21, 24, 35, 36, 40, 56, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 8, 18, 20, 21, 24, 35, 40, 45, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 9, 10, 20, 28, 35, 36, 45])=1/2
# sum([2, 3, 4, 6, 7, 9, 10, 21, 28, 36, 42, 45, 60, 70])=1/2
# sum([2, 3, 4, 6, 7, 9, 12, 14, 21, 36, 45, 60])=1/2
# sum([2, 3, 4, 6, 7, 9, 12, 15, 28, 30, 35, 36, 45])=1/2
# sum([2, 3, 4, 6, 7, 9, 12, 18, 24, 28, 30, 40, 42, 56, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 12, 20, 21, 24, 35, 40, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 13, 14, 21, 36, 39, 45, 52, 60])=1/2
# sum([2, 3, 4, 6, 7, 9, 13, 15, 28, 30, 35, 36, 39, 45, 52])=1/2
# sum([2, 3, 4, 6, 7, 9, 13, 18, 24, 28, 30, 39, 40, 42, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 13, 20, 21, 24, 35, 39, 40, 52, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 14, 15, 20, 21, 36, 45, 60])=1/2
# sum([2, 3, 4, 6, 7, 9, 14, 18, 20, 24, 28, 35, 40, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 14, 20, 21, 24, 28, 35, 40, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 9, 15, 18, 20, 24, 28, 30, 40, 42, 56, 72])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 13, 18, 36, 39, 52, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 13, 18, 39, 45, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 13, 21, 28, 39, 42, 52, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 14, 18, 28, 36, 42, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 14, 18, 28, 42, 45, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 14, 20, 21, 30, 60])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 15, 18, 20, 36, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 15, 18, 20, 45, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 15, 20, 21, 28, 42, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 12, 18, 20, 21, 28, 35, 42, 45, 63])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 14, 18, 28, 36, 39, 42, 52, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 14, 18, 28, 39, 42, 45, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 14, 20, 21, 30, 39, 52, 60])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 15, 18, 20, 36, 39, 52, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 15, 18, 20, 39, 45, 52, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 15, 20, 21, 28, 39, 42, 52, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 13, 18, 20, 21, 28, 35, 39, 42, 45, 52, 63])=1/2
# sum([2, 3, 4, 6, 7, 10, 14, 15, 18, 20, 28, 36, 42, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 10, 14, 15, 18, 20, 28, 42, 45, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 7, 12, 13, 14, 15, 20, 21, 39, 52])=1/2
# sum([2, 3, 4, 6, 7, 12, 13, 14, 20, 24, 28, 35, 36, 39, 40, 45, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 7, 12, 13, 15, 18, 21, 28, 30, 35, 39, 42, 45, 52, 63])=1/2
# sum([2, 3, 4, 6, 7, 12, 13, 15, 20, 24, 28, 30, 36, 39, 40, 42, 45, 52, 56, 60, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 14, 18, 24, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 14, 18, 30, 40, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 14, 21, 24, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 14, 21, 30, 40, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 14, 24, 30, 36, 40, 45, 56, 60, 70])=1/2
# sum([2, 3, 4, 6, 8, 9, 10, 20, 21, 24, 30, 35, 36, 40, 45, 56])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 13, 18, 24, 30, 39, 40, 52, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 13, 20, 28, 35, 39, 40, 42, 52, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 13, 21, 24, 30, 39, 40, 42, 52, 63, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 13, 24, 28, 30, 35, 39, 42, 52, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 14, 15, 24, 36, 40, 45, 56, 70])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 14, 18, 24, 28, 30, 40, 42, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 14, 20, 21, 24, 35, 40, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 15, 18, 20, 24, 30, 40, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 15, 20, 21, 24, 30, 40, 42, 63, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 12, 15, 20, 24, 28, 30, 35, 42, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 14, 15, 24, 36, 39, 40, 45, 52, 56, 70])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 14, 18, 24, 28, 30, 39, 40, 42, 52, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 14, 20, 21, 24, 35, 39, 40, 52, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 15, 18, 20, 24, 30, 39, 40, 52, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 15, 20, 21, 24, 30, 39, 40, 42, 52, 63, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 13, 15, 20, 24, 28, 30, 35, 39, 42, 52, 56, 60, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 9, 14, 15, 18, 20, 24, 28, 30, 40, 42, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 13, 14, 24, 30, 39, 40, 52, 56, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 13, 14, 24, 36, 39, 45, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 13, 14, 30, 36, 39, 40, 45, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 13, 20, 21, 24, 35, 36, 39, 45, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 13, 20, 21, 30, 35, 36, 39, 40, 45, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 15, 20, 24, 30, 40, 56, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 15, 20, 24, 36, 45, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 15, 20, 30, 36, 40, 45, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 18, 20, 24, 30, 35, 40, 45, 56, 63])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 18, 21, 24, 30, 36, 40, 42, 56, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 18, 21, 24, 30, 40, 42, 45, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 20, 21, 24, 28, 35, 36, 42, 45, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 12, 14, 20, 21, 28, 30, 35, 36, 40, 42, 45, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 15, 20, 24, 30, 39, 40, 52, 56, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 15, 20, 24, 36, 39, 45, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 15, 20, 30, 36, 39, 40, 45, 52, 56, 60, 70, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 18, 20, 24, 30, 35, 39, 40, 45, 52, 56, 63])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 18, 21, 24, 30, 36, 39, 40, 42, 52, 56, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 18, 21, 24, 30, 39, 40, 42, 45, 52, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 20, 21, 24, 28, 35, 36, 39, 42, 45, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 13, 14, 20, 21, 28, 30, 35, 36, 39, 40, 42, 45, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 8, 10, 14, 15, 18, 20, 21, 24, 30, 36, 40, 42, 56, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 10, 14, 15, 18, 20, 21, 24, 30, 40, 42, 45, 56, 60, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 12, 13, 14, 15, 18, 21, 24, 39, 40, 42, 45, 52, 56, 63, 70])=1/2
# sum([2, 3, 4, 6, 8, 12, 13, 14, 15, 20, 24, 28, 30, 36, 39, 40, 42, 45, 52, 60, 72])=1/2
# sum([2, 3, 4, 6, 8, 12, 13, 14, 15, 21, 24, 28, 30, 35, 36, 39, 42, 45, 52, 56, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 12, 13, 14, 18, 24, 30, 39, 40, 52, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 12, 13, 14, 21, 24, 30, 39, 40, 42, 52, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 12, 14, 15, 18, 20, 24, 30, 40, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 12, 14, 15, 20, 21, 24, 30, 40, 42, 56, 63, 70, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 13, 14, 15, 18, 20, 24, 30, 39, 40, 52, 56, 70, 72])=1/2
# sum([2, 3, 4, 6, 9, 10, 13, 14, 15, 20, 21, 24, 30, 39, 40, 42, 52, 56, 63, 70, 72])=1/2
# todo add more




# https://github.com/hughdbrown/Project-Euler/blob/master/euler-152.py
# set_of_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 30, 32, 35, 36, 40, 42, 45,
#                   48, 49, 50, 54, 56, 60, 63, 64, 70, 72, 75, 80]
# ##set_of_numbers = [2,3,4,5,6, 7,9,10,12, 15,20, 28, 30,35,36,40, 45] ##,48,49,50, 54,56,60,63,64, 70,72,75,80]
# lcm = 4480842240000
# inverses = [lcm / (x * x) for x in set_of_numbers]
# half = lcm / 2
#
# residuals = [sum(inverses[i: -1]) for i in range(len(inverses))]
#
#
# def searchNextInverse(startIndex, remainder):
#     for k in range(startIndex, len(inverses)):
#         if remainder >= inverses[k]:
#             return k
#     else:
#         return -1
#
#
# def real_numbers(x):
#     return [set_of_numbers[j] for j in x]
#
#
# def find(remainder, start_index, factors):
#     if remainder == 0:
#         yield factors
#     else:
#         ##print real_numbers(factors), set_of_numbers[start_index], remainder
#         ##start_index = max(j for j in range(start_index, len(inverses)) if remainder >= inverses[j] )
#         for j in range(start_index, len(inverses)):
#             ##print set_of_numbers[j]
#             new_remainder = remainder - inverses[j]
#             if (new_remainder >= 0):
#                 new_factors = factors + [j]
#
#                 for factors_found in find(new_remainder, j + 1, new_factors):
#                     yield factors_found
#             elif (remainder > residuals[j]):
#                 ##print set_of_numbers[j], remainder, residuals[j], inverses[j]
#                 break
#     return
